WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

select = { "SELECT" }
from = { "FROM" }
where_keyword = { "WHERE" } // Renamed to avoid conflict with Rust keyword

variable = @{ ('a'..'z')+ }
number = @{ 
    ('0'..'9')+ // Integer part
    ~ ("." ~ ('0'..'9')+)? // Optional decimal part
}
symbol = @{ ("^"| "+" | "-" | "*" | "/")}


// Aggregate function definition
agg_function = { ^"MAX" }
aggregate_expr = { agg_function ~ "(" ~ variable ~ ")" }

operator = { ">" | "<" | "=" }

// Condition parts
expr = { variable ~ operator ~ number }
where_expr = { where_keyword ~ expr }
select_expr = {variable ~ symbol ~ number }

// Main query structure - making where clause optional
query = {
    SOI ~
    select ~ (aggregate_expr | select_expr | variable) ~
    from ~ variable ~
    where_expr? ~
    EOI
}