WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

select = { "SELECT" }
from = { "FROM" }
where_keyword = { "WHERE" }
as_keyword = { "AS" }
join = { "JOIN" }
on = { "ON" }

variable = @{ ('a'..'z' | "_") ~ ('a'..'z' | '0'..'9' | "_")* }
number = @{ 
    ('0'..'9')+ // Integer part
    ~ ("." ~ ('0'..'9')+)? // Optional decimal part
}
symbol = @{ ("^"| "+" | "-" | "*" | "/")}


// Aggregate function definition
agg_function = { ^"MAX" }
aggregate_expr = { agg_function ~ "(" ~ variable ~ ")" }

operator = @{ ">=" | "<=" | "!=" | "<>" | ">" | "<" | "=" }

binary_op = { 
    ^"AND" | 
    ^"OR"
}

// Condition parts
condition = { variable ~ operator ~ (variable | number) }
where_conditions = { condition ~ (binary_op ~ condition)* }
where_expr = { where_keyword ~ where_conditions }


select_expr = {variable ~ symbol ~ number }


join_condition = { variable ~ "." ~ variable ~ "=" ~ variable ~ "." ~ variable }


from_expr = { from ~ scan_expr ~ join_expr?}
scan_expr = { variable ~ (as_keyword ~ variable)? }
join_expr = { join_kind? ~ join ~ scan_expr ~ on ~ join_condition }
join_kind = _{ ( InnerJoinKind | LeftJoinKind ) }
                InnerJoinKind = { ^"inner" }
                LeftJoinKind = { ^"left" ~ (^"outer")? }



query = {
    SOI ~
    select ~ (aggregate_expr | select_expr | variable) ~
    from_expr ~
    where_expr? ~
    EOI
}